package org.shopping.common.components.constants;/*
 *
 * Copyright 2020 by American Express, Inc., All rights reserved.
 * This software is the confidential and  proprietary information
 * of American Express, Inc.  ("Confidential  Information").  You
 * shall not disclose such Confidential Information and shall use
 * it only in accordance with the terms of  the license agreement
 * you entered into with American Express.
 *
 * Project: Mario
 * Class  : ServiceAlerts
 * Author : agupt219
 * Description: This Class holds Alert information.
 *
 */


public enum ServiceAlerts {


    SUCCESS(0000, "SUCCESS"),
    INVALID_SESSION(1001, "PUBLIC_GUID_MISSING_IN_USER_JWT"),
    INTERNAL_API_ERROR(1002, "INTERNAL_API_ERROR"),
    COUCHBASE_OPERATION_ERROR(1005, "COUCHBASE_OPERATION_ERROR"),
    PARTNER_OPERATION_ERROR(1005, "PARTNER_OPERATION_ERROR"),
    INVALID_REQUEST(1006, "INVALID_REQUEST"),
    USER_ALREADY_ENROLLED(3001, "USER_ALREADY_ENROLLED"),
    RESOURCE_STATE_CONFLICT(3001, "Request could not be processed because of conflict in the request,resource is not in the expected state"),
    NO_ELIGIBLE_CARD_FOUND(3002, "NO_ELIGIBLE_CARD_FOUND"),
    CUSTOMER_ENROLLMENT_EXIST(3003, "CUSTOMER_ENROLLMENT_EXIST"),
    USER_PARTIALLY_ENROLLED(3004, "USER_PARTIALLY_ENROLLED"),
    ENROLLMENT_REQUIRES_MFA(3005, "ENROLLMENT_REQUIRES_MFA"),
    CUSTOMER_ACCOUNT_LOCKED(3006, "CUSTOMER_ACCOUNT_LOCKED"),
    MISSING_EMAIL_INFORMATION(3007, "MISSING_EMAIL_INFORMATION"),
    MISSING_KYC_INFORMATION(3008, "MISSING_KYC_INFORMATION"),
    MISSING_PHONE_INFORMATION(3009, "MISSING_PHONE_INFORMATION"),
    EMAIL_LINKED_WITH_OTHER_PROFILE(3010, "EMAIL_LINKED_WITH_OTHER_PROFILE"),
    NO_RECORD_FOUND(3011, "NO_RECORD_FOUND"),
    RAVEN_NOTIFICATION_DATA_NOT_FOUND(3012, "RAVEN_EMAIL_NOTIFICATION_FAILED"),
    FRAUD_RISK_DECLINED(3013, "DECLINED"),
    CRYPTO_BALANCE_EXIST(3014, "CRYPTO_BALANCE_EXIST"),
    NOT_ELIGIBLE_USER(3015, "NOT_ELIGIBLE_USER"),
    DCP_GET_EMAIL_FAILED(2001, "DCP_GET_EMAIL_FAILED"),
    DCP_GET_PHONE_NUMBER_FAILED(2001, "DCP_GET_PHONE_NUMBER_FAILED"),
    ENROLLED_ACCOUNT_FAILURE(2002, "FAILED_TO_FETCH_ENROLLED_ACCOUNTS"),
    SOR_CREATE_ACCOUNT_FAILED(2003, "SOR_CREATE_ACCOUNT_FAILED"),
    SOR_GET_ACCOUNT_FAILED(2003, "SOR_GET_ACCOUNT_FAILED"),
    SOR_POST_RESERVE_FAILED(2003, "SOR_POST_RESERVE_FAILED"),
    SOR_PUT_RESERVE_FAILED(2003, "SOR_PUT_RESERVE_FAILED"),
    SOR_POST_BUY_FAILED(2003, "SOR_POST_BUY_FAILED"),
    SOR_POST_SELL_FAILED(2003, "SOR_POST_SELL_FAILED"),
    SOR_GET_BALANCE_HISTORY_FAILED(2003, "SOR_GET_BALANCE_HISTORY_FAILED"),
    SOR_GET_WEEKLY_TRANSACTION_BALANCE_FAILED(2003, "SOR_GET_WEEKLY_TRANSACTION_BALANCE_FAILED"),
    C360_GET_CUSTOMER_DATA_FAILED(2004, "C360_GET_CUSTOMER_DATA_FAILED"),
    CARDASSET_GET_CARDART_FAILED(2005, "CARDASSET_GET_CARDART_FAILED"),
    GET_PAXOS_ACCESS_TOKEN_FAILED(2005, "GET_PAXOS_ACCESS_TOKEN_FAILED"),
    CREATE_PAXOS_PROFILE_FAILED(2006, "CREATE_PAXOS_PROFILE_FAILED"),
    GET_PAXOS_TICKER_FAILED(2007, "GET_PAXOS_TICKER_FAILED"),
    PAXOS_LIST_ASSETS_FAILED(2007, "PAXOS_LIST_ASSETS_FAILED"),
    SSN_NOT_FOUND(2004, "SSN_NOT_FOUND"),
    DOB_NOT_FOUND(2004, "DOB_NOT_FOUND"),
    ADDRESS_NOT_FOUND(2004, "ADDRESS_NOT_FOUND"),
    NAME_NOT_FOUND(2004, "NAME_NOT_FOUND"),
    RELATIONSHIP_ID_NOT_FOUND(2004, "RELATIONSHIP_ID_NOT_FOUND"),
    CB_ERROR(1001, "Couchbase exception occurred for "),
    INTERNAL_ERROR(1002, "Internal API error occurred in "),
    EDDP_DECRPT_ERROR(1003, "EDPP decryption failed for "),
    EDPP_ENCRYPT_ERROR(1004, "EDPP encryption failed for "),
    MANDATORY_DATA_MISSING(1005, "Mandatory Data Missing from "),
    INVALID_REQUEST_PARAM(1006, "Invalid request param "),
    SCHEDULER_ERROR(1007, "Internal API error occurred in "),
    REGISTRATION_TOKEN_INVALID(1009, "Registration token is Invalid"),
    EMM_CREATE_ENROLLMENT_FAILED(3001, "EMM_CREATE_ENROLLMENT_FAILED"),
    EMM_LINKED_BANK_ID_NOT_FOUND(3002, "Linked Bank Id is not found in Eligible banks list"),
    INSUFFICIENT_FUND(3016, "Insufficient balance for requested amount"),
    SOR_WITH_DRAW_EVENT_FAILED(3011, "SOR_WITH_DRAW_EVENT_FAILED"),
    INVALID_BANK_IDENTIFIER(3011, "Invalid Bank Identifier");

    int code;
    String message;

    private ServiceAlerts(int code, String message) {
        this.code = code;
        this.message = message;
    }

    public int getAlertCode() {
        return this.code;
    }

    public String getAlertMessage() {
        return this.message;
    }
}
